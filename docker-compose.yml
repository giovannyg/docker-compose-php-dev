version: '3.7'
services:
  #apache:
    #container_name: '${PROJECT_NAME}_apache'
    #build: './apache'
    #restart: unless-stopped
    #ports: 
      #- 80:80
    #volumes:
      #- ./src:/usr/share/nginx/html
    #depends_on:
      #- php
    #networks:
      #- project-name
  nginx:
    container_name: '${PROJECT_NAME}_nginx'
    build: './nginx'
    restart: unless-stopped
    ports: 
      - 80:80
    volumes:
      - ./src:/usr/share/nginx/html/
    depends_on:
      - php
    networks:
      - project-name
  php:
    container_name: '${PROJECT_NAME}_php'
    restart: unless-stopped
    build:
      context: './php'
      args:
        - INSTALL_ELASTIC_SEARCH=${PHP_INSTALL_ELASTIC_SEARCH}
        - INSTALL_PDO_SQLSRV=${PHP_INSTALL_PDO_SQLSRV}
        - INSTALL_XDEBUG=${PHP_INSTALL_XDEBUG}
        - PHPUSER=${PHP_USER}
        - PHPGROUP=${PHP_GROUP:-1000}
    volumes:
      - ./src:/usr/share/nginx/html/
      - ./tmp:/usr/local/tmp
    extra_hosts:
      - "host.docker.internal:${APACHE_CONTAINER_IP}"
      - "project-name.web:${APACHE_CONTAINER_IP}"
    networks:
      - docker-compose-databases_dbnet
      - project-name

  laravel:
    container_name: '${PROJECT_NAME}_laravel'
    build:
      context: './composer'
      args:
        - PHPUSER=${PHP_USER}
        - PHPGROUP=${PHP_GROUP:-1000}
    volumes:
      - ./src:/usr/share/nginx/html/
    depends_on:
      - php
    user: ${PHP_USER}
    entrypoint: ['laravel']
    networks:
    - project-name

  npm:
    container_name: '${PROJECT_NAME}_npm'
    image: node:14.17
    volumes:
      - ./src:/usr/share/nginx/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /usr/share/nginx/html
    entrypoint: ['npm']
    networks:
      - project-name

  artisan:
    container_name: '${PROJECT_NAME}_artisan'
    build:
      context: './php'
    volumes:
      - ./src:/usr/share/nginx/html
    working_dir: /usr/share/nginx/html
    entrypoint: ['php', '/usr/share/nginx/html/artisan']
    user: ${PHP_USER}
    networks:
      - docker-compose-databases_dbnet
      - project-name

  mailhog:
    container_name: '${PROJECT_NAME}_mailhog'
    build: './mailhog'
    ports:
      - 8025:8025
    networks:
      - project-name
networks:
  docker-compose-databases_dbnet:
    external: true
  project-name:
    driver: bridge
