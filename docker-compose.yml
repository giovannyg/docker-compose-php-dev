version: '3.7'
services:

  apache:
    image: '${IMAGE_CONTAINER_PREFIX}_apache'
    container_name: '${IMAGE_CONTAINER_PREFIX}_apache'
    build: './apache'
    restart: unless-stopped
    ports: 
      - 80:80
    volumes:
      - ./src:/usr/local/apache2/htdocs
    depends_on:
      - php
    networks:
      - laravel
    
  php:
    image: '${IMAGE_CONTAINER_PREFIX}_php'
    container_name: '${IMAGE_CONTAINER_PREFIX}_php'
    restart: unless-stopped
    build:
      context: './php'
      args:
        - INSTALL_ELASTIC_SEARCH=${PHP_INSTALL_ELASTIC_SEARCH}
        - INSTALL_PDO_SQLSRV=${PHP_INSTALL_PDO_SQLSRV}
        - INSTALL_XDEBUG=${PHP_INSTALL_XDEBUG}
        - PHPUSER=${PHP_USER}
        - PHPGROUP=${PHP_GROUP:-1000}
    volumes:
      - ./src:/usr/local/apache2/htdocs
      - ./tmp:/usr/local/tmp
    extra_hosts:
      - "host.docker.internal:${APACHE_CONTAINER_IP}"
    networks:
      - databases_dbnet
      - laravel

  npm:
    image: '${IMAGE_CONTAINER_PREFIX}_npm'
    container_name: '${IMAGE_CONTAINER_PREFIX}_npm'
    build: './node'
    volumes:
      - ./src:/usr/local/apache2/htdocs
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /usr/local/apache2/htdocs
    entrypoint: ['npm']
    networks:
      - laravel

  mailhog:
    image: '${IMAGE_CONTAINER_PREFIX}_mailhog'
    container_name: '${IMAGE_CONTAINER_PREFIX}_mailhog'
    build: './mailhog'
    ports:
      - 8025:8025
    networks:
      - laravel

networks:
  databases_dbnet:
    external: true
  laravel:
    driver: bridge