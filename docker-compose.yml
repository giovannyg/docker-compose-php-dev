version: '3.7'
services:
  apache:
    container_name: '${PROJECT_NAME}_backend_apache'
    build: './apache'
    restart: always
    ports: 
      - 80:80
    volumes:
      - ./public_html:/usr/local/apache2/htdocs
    depends_on:
      - php
      - mysql

  php:
    container_name: '${PROJECT_NAME}_backend_php'
    build:
      context: './php'
      args:
        - INSTALL_ELASTIC_SEARCH=${PHP_INSTALL_ELASTIC_SEARCH}
        - INSTALL_COMPOSER=${PHP_INSTALL_COMPOSER}
        - INSTALL_PDO_SQLSRV=${PHP_INSTALL_PDO_SQLSRV}
        - PHPUSER=${PHP_USER}
        - PHPGROUP=${PHP_GROUP:-1000}
    volumes:
      - ./public_html:/usr/local/apache2/htdocs
      - ./tmp:/usr/local/tmp
    extra_hosts:
      - "host.docker.internal:host-gateway"

  composer:
    container_name: '${PROJECT_NAME}_backend_composer'
    build:
      context: './composer'
      args:
        - PHPUSER=${PHP_USER}
        - PHPGROUP=${PHP_GROUP:-1000}
    volumes:
      - ./public_html:/usr/local/apache2/htdocs
    depends_on:
      - php
    user: ${PHP_USER}
    entrypoint: ['composer', '--ignore-platform-reqs']

  npm:
    container_name: '${PROJECT_NAME}_backend_npm'
    image: node:14.17
    volumes:
      - ./public_html:/usr/local/apache2/htdocs
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /usr/local/apache2/htdocs
    entrypoint: ['npm']

  artisan:
    container_name: '${PROJECT_NAME}_backend_artisan'
    build:
      context: './php'
    volumes:
      - ./public_html:/usr/local/apache2/htdocs
    depends_on:
      - mysql
    working_dir: /usr/local/apache2/htdocs
    entrypoint: ['php', '/usr/local/apache2/htdocs/artisan']
    user: ${PHP_USER}

  mysql:
    container_name: '${PROJECT_NAME}_backend_mysql'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    build: './mysql'
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./database:/var/lib/mysql


